version: "3.9"

services:
    traefik:
        image: traefik:v3.0
        ports:
          - "80:80"
          - "8080:8080"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
        command:
          - --api.insecure=true
          - --providers.docker=true
          - --entrypoints.web.address=:80
        labels:
            traefik.http.routers.traefik.rule: Host(`traefik.localhost`)

    api-player:
        build:
            context: .
            dockerfile: environments/dev/Dockerfile.player
        ports:
          - "8001:8000"
        env_file:
          - .env
        environment:
            OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED: true
            OTEL_TRACES_EXPORTER: console
            OTEL_METRICS_EXPORTER: console
            OTEL_LOGS_EXPORTER: console
            OTEL_SERVICE_NAME: api.player
        volumes:
          - "./api/players:/usr/src"
        depends_on:
          - traefik
        labels:
            traefik.http.routers.player.rule: Host(`player.localhost`)

    api-admin:
        build:
            context: .
            dockerfile: environments/dev/Dockerfile.admin
        ports:
          - "8002:8000"
        env_file:
          - .env
        environment:
            OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED: true
            OTEL_TRACES_EXPORTER: console
            OTEL_METRICS_EXPORTER: console
            OTEL_LOGS_EXPORTER: console
            OTEL_SERVICE_NAME: api.admin
        volumes:
          - "./api/admin:/usr/src"
        depends_on:
          - traefik
        labels:
            traefik.http.routers.admin.rule: Host(`admin.localhost`)

    api-setup:
        entrypoint: bash -c "cd src; poetry -C /usr run alembic upgrade head"
        build:
          context: .
          dockerfile: environments/dev/Dockerfile.setup
        ports:
        - "8003:8000"
        env_file:
        - .env
        volumes:
        - ".:/usr/src"
        depends_on:
        - database
        profiles:
        - setup

    database:
        image: postgres:16.1
        restart: always
        environment:
            POSTGRES_DB: db
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
        ports:
          - "5432:5432"

    pgadmin:
        image: dpage/pgadmin4:8.3
        ports:
          - "5050:80"
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: admin
        volumes:
          - "./environments/dev/pgadmin.json:/pgadmin4/servers.json"
        profiles:
          - monitor
        depends_on:
          - traefik
        labels:
            traefik.http.routers.pgadmin.rule: Host(`pgadmin.localhost`)

    swagger:
        image: swaggerapi/swagger-ui:v5.11.8
        environment:
            URLS: >
                [
                  { url: "http://admin.${DOMAIN:-localhost}/openapi.json", name: "admin"},
                  { url: "http://player.${DOMAIN:-localhost}/openapi.json", name: "player"},
                ]
        profiles:
          - monitor
        depends_on:
          - traefik
        labels:
            service.type: app
            traefik.enable: true
            traefik.http.routers.swagger.rule: Host(`swagger.localhost`)
            traefik.http.routers.swagger.entrypoints: web
            traefik.http.services.swagger.loadbalancer.server.port: 8080

    jaeger:
        image: jaegertracing/all-in-one:1.55
        environment:
          - COLLECTOR_OTLP_ENABLED=true
        ports:
          - 6831:6831/udp
          - 6832:6832/udp
          - 5778:5778
          - 16686:16686
          - 14268:14268
          - 14269:14269
          - 14250:14250
          - 9411:9411
          - 4317:4317
          - 4318:4318
        profiles:
          - monitor
